/*
 * Account Information API
 * In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 
 *
 * The version of the OpenAPI document: 3.1.11
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.OBActiveOrHistoricCurrencyAndAmount10;
import com.konfigthis.client.model.OBActiveOrHistoricCurrencyAndAmount9;
import com.konfigthis.client.model.OBBankTransactionCodeStructure1;
import com.konfigthis.client.model.OBCreditDebitCode1;
import com.konfigthis.client.model.OBCurrencyExchange5;
import com.konfigthis.client.model.OBEntryStatus1Code;
import com.konfigthis.client.model.OBTransactionCardInstrument1;
import com.konfigthis.client.model.OBTransactionMutability1Code;
import com.konfigthis.client.model.ProprietaryBankTransactionCodeStructure1;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for OBTransaction6Basic
 */
public class OBTransaction6BasicTest {
    private final OBTransaction6Basic model = new OBTransaction6Basic();

    /**
     * Model tests for OBTransaction6Basic
     */
    @Test
    public void testOBTransaction6Basic() {
        // TODO: test OBTransaction6Basic
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'transactionId'
     */
    @Test
    public void transactionIdTest() {
        // TODO: test transactionId
    }

    /**
     * Test the property 'transactionReference'
     */
    @Test
    public void transactionReferenceTest() {
        // TODO: test transactionReference
    }

    /**
     * Test the property 'statementReference'
     */
    @Test
    public void statementReferenceTest() {
        // TODO: test statementReference
    }

    /**
     * Test the property 'creditDebitIndicator'
     */
    @Test
    public void creditDebitIndicatorTest() {
        // TODO: test creditDebitIndicator
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'transactionMutability'
     */
    @Test
    public void transactionMutabilityTest() {
        // TODO: test transactionMutability
    }

    /**
     * Test the property 'bookingDateTime'
     */
    @Test
    public void bookingDateTimeTest() {
        // TODO: test bookingDateTime
    }

    /**
     * Test the property 'valueDateTime'
     */
    @Test
    public void valueDateTimeTest() {
        // TODO: test valueDateTime
    }

    /**
     * Test the property 'addressLine'
     */
    @Test
    public void addressLineTest() {
        // TODO: test addressLine
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'chargeAmount'
     */
    @Test
    public void chargeAmountTest() {
        // TODO: test chargeAmount
    }

    /**
     * Test the property 'currencyExchange'
     */
    @Test
    public void currencyExchangeTest() {
        // TODO: test currencyExchange
    }

    /**
     * Test the property 'bankTransactionCode'
     */
    @Test
    public void bankTransactionCodeTest() {
        // TODO: test bankTransactionCode
    }

    /**
     * Test the property 'proprietaryBankTransactionCode'
     */
    @Test
    public void proprietaryBankTransactionCodeTest() {
        // TODO: test proprietaryBankTransactionCode
    }

    /**
     * Test the property 'cardInstrument'
     */
    @Test
    public void cardInstrumentTest() {
        // TODO: test cardInstrument
    }

    /**
     * Test the property 'supplementaryData'
     */
    @Test
    public void supplementaryDataTest() {
        // TODO: test supplementaryData
    }

}
