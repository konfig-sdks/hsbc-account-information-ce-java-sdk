/*
 * Account Information API
 * In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319) 
 *
 * The version of the OpenAPI document: 3.1.11
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.OBReadProduct2DataProductInnerOtherProductTypeCreditInterest;
import com.konfigthis.client.model.OBReadProduct2DataProductInnerOtherProductTypeLoanInterest;
import com.konfigthis.client.model.OBReadProduct2DataProductInnerOtherProductTypeOtherFeesChargesInner;
import com.konfigthis.client.model.OBReadProduct2DataProductInnerOtherProductTypeOverdraft;
import com.konfigthis.client.model.OBReadProduct2DataProductInnerOtherProductTypeProductDetails;
import com.konfigthis.client.model.OBReadProduct2DataProductInnerOtherProductTypeRepayment;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for OBReadProduct2DataProductInnerOtherProductType
 */
public class OBReadProduct2DataProductInnerOtherProductTypeTest {
    private final OBReadProduct2DataProductInnerOtherProductType model = new OBReadProduct2DataProductInnerOtherProductType();

    /**
     * Model tests for OBReadProduct2DataProductInnerOtherProductType
     */
    @Test
    public void testOBReadProduct2DataProductInnerOtherProductType() {
        // TODO: test OBReadProduct2DataProductInnerOtherProductType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'productDetails'
     */
    @Test
    public void productDetailsTest() {
        // TODO: test productDetails
    }

    /**
     * Test the property 'creditInterest'
     */
    @Test
    public void creditInterestTest() {
        // TODO: test creditInterest
    }

    /**
     * Test the property 'overdraft'
     */
    @Test
    public void overdraftTest() {
        // TODO: test overdraft
    }

    /**
     * Test the property 'loanInterest'
     */
    @Test
    public void loanInterestTest() {
        // TODO: test loanInterest
    }

    /**
     * Test the property 'repayment'
     */
    @Test
    public void repaymentTest() {
        // TODO: test repayment
    }

    /**
     * Test the property 'otherFeesCharges'
     */
    @Test
    public void otherFeesChargesTest() {
        // TODO: test otherFeesCharges
    }

    /**
     * Test the property 'supplementaryData'
     */
    @Test
    public void supplementaryDataTest() {
        // TODO: test supplementaryData
    }

}
